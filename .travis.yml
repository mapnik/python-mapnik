language: generic

git:
  submodules: false

matrix:
  include:
    - os: linux
      compiler: clang
      env: >-
          CC="clang-3.9"
          CXX="clang++-3.9"
      addons:
        apt:
          sources: [ ubuntu-toolchain-r-test ]
          packages: [ clang-3.9, libstdc++-5-dev ]
    - os: osx
      compiler: clang
      env: >-
          CC="clang"
          CXX="clang++"

cache:
  directories:
  - $HOME/.ccache

env:
  global:
    - secure: "CqhZDPctJcpXGPpmIPK5usD/O+2HYawW3434oDufVS9uG/+C7aHzKzi8cuZ7n/REHqJMzy7gJfp6DiyF2QowpnN1L2W0FSJ9VOgj4JQF2Wsupo6gJkq6/CW2Fa35PhQHsv29bfyqtIq+R5SBVAieBe/Lh2P144RwRliGRopGQ68="
    - secure: "idk4fdU49i546Zs6Fxha14H05eRJ1G/D6NPRaie8M8o+xySnEqf+TyA9/HU8QH7cFvroSLuHJ1U7TmwnR+sXy4XBlIfHLi4u2MN+l/q014GG7T2E2xYcTauqjB4ldToRsDQwe5Dq0gZCMsHLPspWPjL9twfp+Ds7qgcFhTsct0s="
    - BOOST_PYTHON_LIB="boost_python"
    - BOOST_SYSTEM_LIB="boost_system"
    - BOOST_THREAD_LIB="boost_thread"
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1

before_install:
 # workaround travis rvm bug
 # http://superuser.com/questions/1044130/why-am-i-having-how-can-i-fix-this-error-shell-session-update-command-not-f
 - |
   if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
     rvm get head || true
   fi
 - declare -p HOME PATH "${!CCACHE@}" "${!TRAVIS@}"  # print variables by prefix

 # An ancient bug in distutils (https://bugs.python.org/issue8027)
 # prevents having multi-word CXX="ccache c++". Luckily distutils
 # uses CC to compile C++ sources, and only uses CXX for linking,
 # for which ccache is useless.
 - export CC="ccache $CC"

 - export MASON_BUILD=true
 - export MASON_ROOT=$PWD/mason_packages
 - export PYTHONUSERBASE=$MASON_ROOT/.link
 - export PATH=$MASON_ROOT/.link/bin:$PATH
 - export COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')

install:
 - source ./bootstrap.sh
 - install postgres 9.6.5
 - install postgis 2.4.1
 - install ccache 3.7.2
 - ccache --version
 - test "$TRAVIS_OS_NAME" != osx || sudo easy_install pip
 - pip install --upgrade --user pip
 - pip install --upgrade --user nose
 - pip install --upgrade --user wheel
 - pip install --upgrade --user twine
 - pip install --upgrade --user setuptools
 - pip install --upgrade --user PyPDF2

before_script:
 - touch SCRIPT_START
 - python --version
 - python -m site
 - mkdir -p "$(python -m site --user-site)"

 # distutils uses LDSHARED for linking, which it somehow constructs from CC
 # with additional flags, but the resulting command is ultimately wrong.
 #
 #      LDSHARED[osx]='clang -bundle -undefined dynamic_lookup'
 #      LDSHARED[linux]='x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security'
 #
 # On Linux there are some misplaced options that don't apply to linker.
 # OSX command looks fine, but for some reason leads to the execution of
 # 'clang++ clang -bundle -undefined dynamic_lookup ...' and fails.
 #
 #      LDCXXSHARED[osx]='clang++ -bundle -undefined dynamic_lookup'
 #      LDCXXSHARED[linux]='c++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions'
 #
 # So let's just replace the value of LDSHARED with LDCXXSHARED, which
 # apparently works on both OSX and Linux. Nevermind compiler 'c++',
 # distutils substitutes that with CXX.
 #
 - LDSHARED=$(python -c 'from distutils import sysconfig as dusc; print(dusc.get_config_var("LDSHARED"))')
 - LDCXXSHARED=$(python -c 'from distutils import sysconfig as dusc; print(dusc.get_config_var("LDCXXSHARED"))')
 - printf 'default LDSHARED=%q\n' "$LDSHARED"
 - printf 'default LDCXXSHARED=%q\n' "$LDCXXSHARED"
 - export LDSHARED=${LDCXXSHARED}

script:
 - python setup.py install --user --prefix=
   # why empty prefix is needed is explained here:
   # https://stackoverflow.com/questions/4495120/combine-user-with-prefix-error-with-setup-py-install
 - (( !TRAVIS_TEST_RESULT )) && source ./scripts/setup_postgres.sh
 - (( !TRAVIS_TEST_RESULT )) && git submodule update --init --depth=20 test/
 - python test/run_tests.py
 - python test/visual.py -q

before_cache:
 - ccache --version
 - ccache --show-config
 - ccache --show-stats
 - ccache --zero-stats
 - find $HOME/.ccache -mindepth 3 -newer SCRIPT_START | head | file --files-from -

after_success:
 - |
   if [[ ${COMMIT_MESSAGE} =~ "[publish]" ]]; then
     python setup.py bdist_wheel
     if [[ $(uname -s) == 'Linux' ]]; then
        export PRE_DISTS='dist/*.whl'
        rename 's/linux_x86_64/any/;' $PRE_DISTS
     fi
     export DISTS='dist/*'
     "$MASON_ROOT/.link/bin/twine" upload -u $PYPI_USER -p $PYPI_PASSWORD $DISTS
   fi


notifications:
  slack:
    secure: dZhYCFXTvn6zna7GhagCUcInfhoUf/AMkTpJKPnJgaGnS3DlfbnMsSU73J4hs46wCOFII3AfYUOI/SUEBZ15lkJHfBsCku0a5a2M8g5ddxKFoIM8gosH3dLjeGJ5Ou8zNQGyzokXidKfHC+Gh4UVGyn+aeXxglRmRkUeaP+GD1k=
